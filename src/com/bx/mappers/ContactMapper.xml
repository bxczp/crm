<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.bx.dao.ContactDao">
	<!-- resultMap表字段与属性的映射 -->
	<resultMap type="Contact" id="ContactResult">
		<result column="id" property="id" />
		<result column="contactTime" property="contactTime" />
		<result column="address" property="address" />
		<result column="overview" property="overView" />
		<association property="customer" select="com.bx.dao.CustomerDao.findById"
			column="cusId">
		</association>
	</resultMap>

	<!-- select下的属性 -->
	<!-- parameterType 传给此语句的参数的完整类名或别名 -->
	<!-- sreultType 语句返回值类型的整类名或别名。注意，如果是集合，那么这里填写的是集合的项的整类名或别名，而不是集合本身的类名。（resultType -->
	<!-- 与resultMap 不能并用） -->
	<!-- resultMap 引用的外部resultMap 名。结果集映射是MyBatis -->
	<!-- 中最强大的特性。许多复杂的映射都可以轻松解决。（resultType 与resultMap 不能并用） -->
	<select id="find" parameterType="Map" resultMap="ContactResult">
		select * from t_customer_contact
		<where>
			<if test="cusId!=null">
				and cusId =#{cusId}
			</if>
		</where>
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>

	<select id="getListCount" resultType="Long" parameterType="Map">
		select count(*) from t_customer_contact
		<where>
			<if test="cusId!=null">
				and cusId =#{cusId}
			</if>
		</where>
	</select>

	<delete id="delete" parameterType="Integer">
		delete from t_customer_contact
		where id=#{id}
	</delete>

	<insert id="add" parameterType="Contact">
		insert into t_customer_contact
		values(null,#{customer.id},#{contactTime},#{address},#{overView})
	</insert>

	<update id="update" parameterType="Contact">
		update t_customer_contact
		<set>
			<if test="contactTime!=null">
				contactTime=#{contactTime},
			</if>
			<if test="address!=null and address!=''">
				address=#{address},
			</if>
			<if test="overView!=null and overView!=''">
				overView=#{overView},
			</if>
		</set>
		where id=#{id}
	</update>


</mapper>